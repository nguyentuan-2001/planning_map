{"id":"node_modules/ol/asserts.js","dependencies":[{"name":"D:\\Udemy\\web-mapping-bigc\\package.json","includedInParent":true,"mtime":1701684151477},{"name":"D:\\Udemy\\web-mapping-bigc\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1721613999967}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\n/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nfunction assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":7}},{"generated":{"line":15,"column":9},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":16},"name":"assert"},{"generated":{"line":15,"column":15},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":22},"name":"assert"},{"generated":{"line":15,"column":16},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":23},"name":"assertion"},{"generated":{"line":15,"column":25},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":32}},{"generated":{"line":15,"column":27},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":34},"name":"errorMessage"},{"generated":{"line":15,"column":39},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":46}},{"generated":{"line":15,"column":41},"source":"node_modules/ol/asserts.js","original":{"line":9,"column":48}},{"generated":{"line":16,"column":2},"source":"node_modules/ol/asserts.js","original":{"line":10,"column":2}},{"generated":{"line":16,"column":6},"source":"node_modules/ol/asserts.js","original":{"line":10,"column":6}},{"generated":{"line":16,"column":7},"source":"node_modules/ol/asserts.js","original":{"line":10,"column":7},"name":"assertion"},{"generated":{"line":16,"column":16},"source":"node_modules/ol/asserts.js","original":{"line":10,"column":16}},{"generated":{"line":16,"column":18},"source":"node_modules/ol/asserts.js","original":{"line":10,"column":18}},{"generated":{"line":17,"column":4},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":4}},{"generated":{"line":17,"column":10},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":10}},{"generated":{"line":17,"column":14},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":14},"name":"Error"},{"generated":{"line":17,"column":19},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":19}},{"generated":{"line":17,"column":20},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":20},"name":"errorMessage"},{"generated":{"line":17,"column":32},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":32}},{"generated":{"line":17,"column":33},"source":"node_modules/ol/asserts.js","original":{"line":11,"column":33}},{"generated":{"line":18,"column":2},"source":"node_modules/ol/asserts.js","original":{"line":12,"column":2}},{"generated":{"line":19,"column":0},"source":"node_modules/ol/asserts.js","original":{"line":13,"column":0}}],"sources":{"node_modules/ol/asserts.js":"/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"0c7b36600fab4d0d676255ca6983d7ec","cacheData":{"env":{}}}