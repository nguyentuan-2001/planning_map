{"id":"node_modules/ol/style/flat.js","dependencies":[{"name":"D:\\Udemy\\web-mapping\\package.json","includedInParent":true,"mtime":1701684151477},{"name":"D:\\Udemy\\web-mapping\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1701682152710}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDefaultStyle = createDefaultStyle;\n/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45Â° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nfunction createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC'\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":45,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":51,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":57,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":63,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":70,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":76,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":82,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":90,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":96,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":103,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":118,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":166,"column":0}},{"generated":{"line":174,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":168,"column":0}},{"generated":{"line":175,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":169,"column":0}},{"generated":{"line":176,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":170,"column":0}},{"generated":{"line":177,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":171,"column":0}},{"generated":{"line":178,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":173,"column":0}},{"generated":{"line":180,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":174,"column":0}},{"generated":{"line":181,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":175,"column":0}},{"generated":{"line":182,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":176,"column":0}},{"generated":{"line":183,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":177,"column":0}},{"generated":{"line":184,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":178,"column":0}},{"generated":{"line":185,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":179,"column":0}},{"generated":{"line":186,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":180,"column":0}},{"generated":{"line":187,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":181,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":182,"column":0}},{"generated":{"line":189,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":183,"column":0}},{"generated":{"line":190,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":184,"column":0}},{"generated":{"line":191,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":185,"column":0}},{"generated":{"line":192,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":186,"column":0}},{"generated":{"line":193,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":187,"column":0}},{"generated":{"line":194,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":188,"column":0}},{"generated":{"line":195,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":189,"column":0}},{"generated":{"line":196,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":190,"column":0}},{"generated":{"line":197,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":191,"column":0}},{"generated":{"line":198,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":192,"column":0}},{"generated":{"line":199,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":193,"column":0}},{"generated":{"line":200,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":194,"column":0}},{"generated":{"line":201,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":195,"column":0}},{"generated":{"line":202,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":196,"column":0}},{"generated":{"line":203,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":197,"column":0}},{"generated":{"line":204,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":198,"column":0}},{"generated":{"line":205,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":199,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":200,"column":0}},{"generated":{"line":207,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":201,"column":0}},{"generated":{"line":208,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":202,"column":0}},{"generated":{"line":209,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":203,"column":0}},{"generated":{"line":210,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":204,"column":0}},{"generated":{"line":211,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":205,"column":0}},{"generated":{"line":213,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":207,"column":0}},{"generated":{"line":214,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":208,"column":0}},{"generated":{"line":215,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":209,"column":0}},{"generated":{"line":216,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":210,"column":0}},{"generated":{"line":217,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":211,"column":0}},{"generated":{"line":218,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":212,"column":0}},{"generated":{"line":219,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":213,"column":0}},{"generated":{"line":220,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":214,"column":0}},{"generated":{"line":221,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":215,"column":0}},{"generated":{"line":222,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":216,"column":0}},{"generated":{"line":223,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":217,"column":0}},{"generated":{"line":224,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":218,"column":0}},{"generated":{"line":225,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":219,"column":0}},{"generated":{"line":226,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":220,"column":0}},{"generated":{"line":227,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":221,"column":0}},{"generated":{"line":228,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":222,"column":0}},{"generated":{"line":229,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":223,"column":0}},{"generated":{"line":230,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":224,"column":0}},{"generated":{"line":231,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":225,"column":0}},{"generated":{"line":232,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":226,"column":0}},{"generated":{"line":233,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":227,"column":0}},{"generated":{"line":234,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":228,"column":0}},{"generated":{"line":235,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":229,"column":0}},{"generated":{"line":236,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":230,"column":0}},{"generated":{"line":237,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":231,"column":0}},{"generated":{"line":238,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":232,"column":0}},{"generated":{"line":240,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":234,"column":0}},{"generated":{"line":241,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":235,"column":0}},{"generated":{"line":242,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":236,"column":0}},{"generated":{"line":243,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":237,"column":0}},{"generated":{"line":244,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":238,"column":0}},{"generated":{"line":245,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":239,"column":0}},{"generated":{"line":246,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":240,"column":0}},{"generated":{"line":247,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":241,"column":0}},{"generated":{"line":248,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":242,"column":0}},{"generated":{"line":249,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":243,"column":0}},{"generated":{"line":250,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":244,"column":0}},{"generated":{"line":251,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":245,"column":0}},{"generated":{"line":252,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":246,"column":0}},{"generated":{"line":253,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":247,"column":0}},{"generated":{"line":254,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":248,"column":0}},{"generated":{"line":255,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":249,"column":0}},{"generated":{"line":256,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":250,"column":0}},{"generated":{"line":257,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":251,"column":0}},{"generated":{"line":258,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":252,"column":0}},{"generated":{"line":259,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":253,"column":0}},{"generated":{"line":260,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":254,"column":0}},{"generated":{"line":261,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":255,"column":0}},{"generated":{"line":262,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":256,"column":0}},{"generated":{"line":264,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":258,"column":0}},{"generated":{"line":265,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":259,"column":0}},{"generated":{"line":266,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":260,"column":0}},{"generated":{"line":267,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":261,"column":0}},{"generated":{"line":268,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":262,"column":0}},{"generated":{"line":269,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":263,"column":0}},{"generated":{"line":270,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":264,"column":0}},{"generated":{"line":271,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":265,"column":0}},{"generated":{"line":272,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":266,"column":0}},{"generated":{"line":273,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":267,"column":0}},{"generated":{"line":274,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":268,"column":0}},{"generated":{"line":275,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":269,"column":0}},{"generated":{"line":277,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":271,"column":0}},{"generated":{"line":278,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":272,"column":0}},{"generated":{"line":279,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":273,"column":0}},{"generated":{"line":280,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":274,"column":7}},{"generated":{"line":280,"column":9},"source":"node_modules/ol/style/flat.js","original":{"line":274,"column":16},"name":"createDefaultStyle"},{"generated":{"line":280,"column":27},"source":"node_modules/ol/style/flat.js","original":{"line":274,"column":34},"name":"createDefaultStyle"},{"generated":{"line":280,"column":28},"source":"node_modules/ol/style/flat.js","original":{"line":274,"column":34}},{"generated":{"line":280,"column":30},"source":"node_modules/ol/style/flat.js","original":{"line":274,"column":37}},{"generated":{"line":281,"column":2},"source":"node_modules/ol/style/flat.js","original":{"line":275,"column":2}},{"generated":{"line":281,"column":9},"source":"node_modules/ol/style/flat.js","original":{"line":275,"column":9}},{"generated":{"line":282,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":276,"column":4}},{"generated":{"line":282,"column":16},"source":"node_modules/ol/style/flat.js","original":{"line":276,"column":16}},{"generated":{"line":282,"column":18},"source":"node_modules/ol/style/flat.js","original":{"line":276,"column":18}},{"generated":{"line":282,"column":41},"source":"node_modules/ol/style/flat.js","original":{"line":276,"column":41}},{"generated":{"line":283,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":277,"column":4}},{"generated":{"line":283,"column":18},"source":"node_modules/ol/style/flat.js","original":{"line":277,"column":18}},{"generated":{"line":283,"column":20},"source":"node_modules/ol/style/flat.js","original":{"line":277,"column":20}},{"generated":{"line":283,"column":29},"source":"node_modules/ol/style/flat.js","original":{"line":277,"column":29}},{"generated":{"line":284,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":278,"column":4}},{"generated":{"line":284,"column":18},"source":"node_modules/ol/style/flat.js","original":{"line":278,"column":18}},{"generated":{"line":284,"column":20},"source":"node_modules/ol/style/flat.js","original":{"line":278,"column":20}},{"generated":{"line":284,"column":24},"source":"node_modules/ol/style/flat.js","original":{"line":278,"column":24}},{"generated":{"line":285,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":279,"column":4}},{"generated":{"line":285,"column":19},"source":"node_modules/ol/style/flat.js","original":{"line":279,"column":19}},{"generated":{"line":285,"column":21},"source":"node_modules/ol/style/flat.js","original":{"line":279,"column":21}},{"generated":{"line":285,"column":22},"source":"node_modules/ol/style/flat.js","original":{"line":279,"column":22}},{"generated":{"line":286,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":280,"column":4}},{"generated":{"line":286,"column":23},"source":"node_modules/ol/style/flat.js","original":{"line":280,"column":23}},{"generated":{"line":286,"column":25},"source":"node_modules/ol/style/flat.js","original":{"line":280,"column":25}},{"generated":{"line":286,"column":48},"source":"node_modules/ol/style/flat.js","original":{"line":280,"column":48}},{"generated":{"line":287,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":281,"column":4}},{"generated":{"line":287,"column":25},"source":"node_modules/ol/style/flat.js","original":{"line":281,"column":25}},{"generated":{"line":287,"column":27},"source":"node_modules/ol/style/flat.js","original":{"line":281,"column":27}},{"generated":{"line":287,"column":31},"source":"node_modules/ol/style/flat.js","original":{"line":281,"column":31}},{"generated":{"line":288,"column":4},"source":"node_modules/ol/style/flat.js","original":{"line":282,"column":4}},{"generated":{"line":288,"column":25},"source":"node_modules/ol/style/flat.js","original":{"line":282,"column":25}},{"generated":{"line":288,"column":27},"source":"node_modules/ol/style/flat.js","original":{"line":282,"column":27}},{"generated":{"line":289,"column":2},"source":"node_modules/ol/style/flat.js","original":{"line":283,"column":2}},{"generated":{"line":289,"column":3},"source":"node_modules/ol/style/flat.js","original":{"line":283,"column":3}},{"generated":{"line":290,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":284,"column":0}},{"generated":{"line":292,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":286,"column":0}},{"generated":{"line":293,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":287,"column":0}},{"generated":{"line":294,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":288,"column":0}},{"generated":{"line":295,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":289,"column":0}},{"generated":{"line":296,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":290,"column":0}},{"generated":{"line":297,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":291,"column":0}},{"generated":{"line":298,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":292,"column":0}},{"generated":{"line":299,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":293,"column":0}},{"generated":{"line":300,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":294,"column":0}},{"generated":{"line":301,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":295,"column":0}},{"generated":{"line":302,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":296,"column":0}},{"generated":{"line":303,"column":0},"source":"node_modules/ol/style/flat.js","original":{"line":297,"column":0}}],"sources":{"node_modules/ol/style/flat.js":"/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45Â° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n"},"lineCount":null}},"error":null,"hash":"68430ef15c4ea4bed2aede5ca2f2ca7a","cacheData":{"env":{}}}