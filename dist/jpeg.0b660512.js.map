{"version":3,"sources":["node_modules/geotiff/dist-module/compression/jpeg.js"],"names":["_basedecoder","_interopRequireDefault","require","e","__esModule","default","_callSuper","t","o","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","constructor","apply","_typeof","TypeError","_assertThisInitialized","ReferenceError","Boolean","prototype","valueOf","call","Object","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","value","writable","configurable","defineProperty","_setPrototypeOf","_classCallCheck","a","n","_defineProperties","r","length","enumerable","_toPropertyKey","key","_createClass","i","_toPrimitive","Symbol","toPrimitive","String","Number","iterator","dctZigZag","Int32Array","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","values","k","code","push","children","index","p","q","j","pop","decodeScan","data","initialOffset","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","offset","bitsData","bitsCount","readBit","nextByte","Error","concat","toString","decodeHuffman","tree","node","bit","receive","initialLength","undefined","receiveAndExtend","decodeBaseline","component","zz","huffmanTableDC","diff","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","direction","decodeMcu","decodeFunction","mcu","row","col","mcuRow","mcuCol","blockRow","v","blockCol","h","blocks","decodeBlock","blocksPerLine","componentsLength","decodeFn","marker","mcuExpected","blocksPerColumn","mcusPerColumn","usedResetInterval","_component","buildComponentData","lines","samplesPerLine","R","Uint8Array","quantizeAndInverse","dataOut","dataIn","qt","quantizationTable","v0","v1","v2","v3","v4","v5","v6","v7","sample","scanLine","line","JpegStreamReader","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","resetFrames","frames","parse","readUint16","readDataBlock","array","subarray","prepareComponents","maxH","maxV","componentId","hasOwnProperty","Math","ceil","scanLines","blocksPerLineForMcu","blocksPerColumnForMcu","fileMarker","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","componentsOrder","componentsCount","qId","quantizationIdx","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","tableSpec","successiveApproximation","processed","getResult","console","warn","cp","_i4","_Object$keys","keys","outComponents","width","height","scaleX","scaleY","out","oi","y","x","JpegDecoder","exports","_BaseDecoder","fileDirectory","_this","reader","JPEGTables","buffer","BaseDecoder"],"mappings":"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","file":"jpeg.0b660512.js","sourceRoot":"..","sourcesContent":["import BaseDecoder from './basedecoder.js';\n\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nconst dctZigZag = new Int32Array([\n  0,\n  1, 8,\n  16, 9, 2,\n  3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n  5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13, 6,\n  7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63,\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896;// sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0;\n  const code = [];\n  let length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    --length;\n  }\n  code.push({ children: [], index: 0 });\n\n  let p = code[0];\n  let q;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push(q = { children: [], index: 0 });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push(q = { children: [], index: 0 });\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction decodeScan(data, initialOffset,\n  frame, components, resetInterval,\n  spectralStart, spectralEnd,\n  successivePrev, successive) {\n  const { mcusPerLine, progressive } = frame;\n\n  const startOffset = initialOffset;\n  let offset = initialOffset;\n  let bitsData = 0;\n  let bitsCount = 0;\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xFF) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        throw new Error(`unexpected marker: ${((bitsData << 8) | nextByte).toString(16)}`);\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n    let node = tree;\n    let bit;\n    while ((bit = readBit()) !== null) { // eslint-disable-line no-cond-assign\n      node = node[bit];\n      if (typeof node === 'number') {\n        return node;\n      }\n      if (typeof node !== 'object') {\n        throw new Error('invalid huffman sequence');\n      }\n    }\n    return null;\n  }\n  function receive(initialLength) {\n    let length = initialLength;\n    let n = 0;\n    while (length > 0) {\n      const bit = readBit();\n      if (bit === null) {\n        return undefined;\n      }\n      n = (n << 1) | bit;\n      --length;\n    }\n    return n;\n  }\n  function receiveAndExtend(length) {\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.pred += diff;\n    zz[0] = component.pred;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n  }\n  function decodeDCFirst(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n    component.pred += diff;\n    zz[0] = component.pred;\n  }\n  function decodeDCSuccessive(component, zz) {\n    zz[0] |= readBit() << successive;\n  }\n  let eobrun = 0;\n  function decodeACFirst(component, zz) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n  }\n  let successiveACState = 0;\n  let successiveACNextValue;\n  function decodeACSuccessive(component, zz) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    while (k <= e) {\n      const z = dctZigZag[k];\n      const direction = zz[z] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: { // initial state\n          const rs = decodeHuffman(component.huffmanTableAC);\n          const s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new Error('invalid ACn encoding');\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue; // eslint-disable-line no-continue\n        }\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          }\n          break;\n        default:\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n  function decodeMcu(component, decodeFunction, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    const blockRow = (mcuRow * component.v) + row;\n    const blockCol = (mcuCol * component.h) + col;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n  function decodeBlock(component, decodeFunction, mcu) {\n    const blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n\n  const componentsLength = components.length;\n  let component;\n  let i;\n  let j;\n  let k;\n  let n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0;\n  let marker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  const usedResetInterval = resetInterval || mcuExpected;\n\n  while (mcu < mcuExpected) {\n    // reset interval stuff\n    for (i = 0; i < componentsLength; i++) {\n      components[i].pred = 0;\n    }\n    eobrun = 0;\n\n    if (componentsLength === 1) {\n      component = components[0];\n      for (n = 0; n < usedResetInterval; n++) {\n        decodeBlock(component, decodeFn, mcu);\n        mcu++;\n      }\n    } else {\n      for (n = 0; n < usedResetInterval; n++) {\n        for (i = 0; i < componentsLength; i++) {\n          component = components[i];\n          const { h, v } = component;\n          for (j = 0; j < v; j++) {\n            for (k = 0; k < h; k++) {\n              decodeMcu(component, decodeFn, mcu, j, k);\n            }\n          }\n        }\n        mcu++;\n\n        // If we've reached our expected MCU's, stop decoding\n        if (mcu === mcuExpected) {\n          break;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    marker = (data[offset] << 8) | data[offset + 1];\n    if (marker < 0xFF00) {\n      throw new Error('marker was not found');\n    }\n\n    if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\nfunction buildComponentData(frame, component) {\n  const lines = [];\n  const { blocksPerLine, blocksPerColumn } = component;\n  const samplesPerLine = blocksPerLine << 3;\n  const R = new Int32Array(64);\n  const r = new Uint8Array(64);\n\n  // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n  function quantizeAndInverse(zz, dataOut, dataIn) {\n    const qt = component.quantizationTable;\n    let v0;\n    let v1;\n    let v2;\n    let v3;\n    let v4;\n    let v5;\n    let v6;\n    let v7;\n    let t;\n    const p = dataIn;\n    let i;\n\n    // dequant\n    for (i = 0; i < 64; i++) {\n      p[i] = zz[i] * qt[i];\n    }\n\n    // inverse DCT on rows\n    for (i = 0; i < 8; ++i) {\n      const row = 8 * i;\n\n      // check for all-zero AC coefficients\n      if (p[1 + row] === 0 && p[2 + row] === 0 && p[3 + row] === 0\n        && p[4 + row] === 0 && p[5 + row] === 0 && p[6 + row] === 0\n        && p[7 + row] === 0) {\n        t = ((dctSqrt2 * p[0 + row]) + 512) >> 10;\n        p[0 + row] = t;\n        p[1 + row] = t;\n        p[2 + row] = t;\n        p[3 + row] = t;\n        p[4 + row] = t;\n        p[5 + row] = t;\n        p[6 + row] = t;\n        p[7 + row] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[0 + row]) + 128) >> 8;\n      v1 = ((dctSqrt2 * p[4 + row]) + 128) >> 8;\n      v2 = p[2 + row];\n      v3 = p[6 + row];\n      v4 = ((dctSqrt1d2 * (p[1 + row] - p[7 + row])) + 128) >> 8;\n      v7 = ((dctSqrt1d2 * (p[1 + row] + p[7 + row])) + 128) >> 8;\n      v5 = p[3 + row] << 4;\n      v6 = p[5 + row] << 4;\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 128) >> 8;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 128) >> 8;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[0 + row] = v0 + v7;\n      p[7 + row] = v0 - v7;\n      p[1 + row] = v1 + v6;\n      p[6 + row] = v1 - v6;\n      p[2 + row] = v2 + v5;\n      p[5 + row] = v2 - v5;\n      p[3 + row] = v3 + v4;\n      p[4 + row] = v3 - v4;\n    }\n\n    // inverse DCT on columns\n    for (i = 0; i < 8; ++i) {\n      const col = i;\n\n      // check for all-zero AC coefficients\n      if (p[(1 * 8) + col] === 0 && p[(2 * 8) + col] === 0 && p[(3 * 8) + col] === 0\n        && p[(4 * 8) + col] === 0 && p[(5 * 8) + col] === 0 && p[(6 * 8) + col] === 0\n        && p[(7 * 8) + col] === 0) {\n        t = ((dctSqrt2 * dataIn[i + 0]) + 8192) >> 14;\n        p[(0 * 8) + col] = t;\n        p[(1 * 8) + col] = t;\n        p[(2 * 8) + col] = t;\n        p[(3 * 8) + col] = t;\n        p[(4 * 8) + col] = t;\n        p[(5 * 8) + col] = t;\n        p[(6 * 8) + col] = t;\n        p[(7 * 8) + col] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[(0 * 8) + col]) + 2048) >> 12;\n      v1 = ((dctSqrt2 * p[(4 * 8) + col]) + 2048) >> 12;\n      v2 = p[(2 * 8) + col];\n      v3 = p[(6 * 8) + col];\n      v4 = ((dctSqrt1d2 * (p[(1 * 8) + col] - p[(7 * 8) + col])) + 2048) >> 12;\n      v7 = ((dctSqrt1d2 * (p[(1 * 8) + col] + p[(7 * 8) + col])) + 2048) >> 12;\n      v5 = p[(3 * 8) + col];\n      v6 = p[(5 * 8) + col];\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 2048) >> 12;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 2048) >> 12;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[(0 * 8) + col] = v0 + v7;\n      p[(7 * 8) + col] = v0 - v7;\n      p[(1 * 8) + col] = v1 + v6;\n      p[(6 * 8) + col] = v1 - v6;\n      p[(2 * 8) + col] = v2 + v5;\n      p[(5 * 8) + col] = v2 - v5;\n      p[(3 * 8) + col] = v3 + v4;\n      p[(4 * 8) + col] = v3 - v4;\n    }\n\n    // convert to 8-bit integers\n    for (i = 0; i < 64; ++i) {\n      const sample = 128 + ((p[i] + 8) >> 4);\n      if (sample < 0) {\n        dataOut[i] = 0;\n      } else if (sample > 0XFF) {\n        dataOut[i] = 0xFF;\n      } else {\n        dataOut[i] = sample;\n      }\n    }\n  }\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    const scanLine = blockRow << 3;\n    for (let i = 0; i < 8; i++) {\n      lines.push(new Uint8Array(samplesPerLine));\n    }\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n      let offset = 0;\n      const sample = blockCol << 3;\n      for (let j = 0; j < 8; j++) {\n        const line = lines[scanLine + j];\n        for (let i = 0; i < 8; i++) {\n          line[sample + i] = r[offset++];\n        }\n      }\n    }\n  }\n  return lines;\n}\n\nclass JpegStreamReader {\n  constructor() {\n    this.jfif = null;\n    this.adobe = null;\n\n    this.quantizationTables = [];\n    this.huffmanTablesAC = [];\n    this.huffmanTablesDC = [];\n    this.resetFrames();\n  }\n\n  resetFrames() {\n    this.frames = [];\n  }\n\n  parse(data) {\n    let offset = 0;\n    // const { length } = data;\n    function readUint16() {\n      const value = (data[offset] << 8) | data[offset + 1];\n      offset += 2;\n      return value;\n    }\n    function readDataBlock() {\n      const length = readUint16();\n      const array = data.subarray(offset, offset + length - 2);\n      offset += array.length;\n      return array;\n    }\n    function prepareComponents(frame) {\n      let maxH = 0;\n      let maxV = 0;\n      let component;\n      let componentId;\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          if (maxH < component.h) {\n            maxH = component.h;\n          }\n          if (maxV < component.v) {\n            maxV = component.v;\n          }\n        }\n      }\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          const blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n          const blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / maxV);\n          const blocksPerLineForMcu = mcusPerLine * component.h;\n          const blocksPerColumnForMcu = mcusPerColumn * component.v;\n          const blocks = [];\n          for (let i = 0; i < blocksPerColumnForMcu; i++) {\n            const row = [];\n            for (let j = 0; j < blocksPerLineForMcu; j++) {\n              row.push(new Int32Array(64));\n            }\n            blocks.push(row);\n          }\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n          component.blocks = blocks;\n        }\n      }\n      frame.maxH = maxH;\n      frame.maxV = maxV;\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let fileMarker = readUint16();\n    if (fileMarker !== 0xFFD8) { // SOI (Start of Image)\n      throw new Error('SOI not found');\n    }\n\n    fileMarker = readUint16();\n    while (fileMarker !== 0xFFD9) { // EOI (End of image)\n      switch (fileMarker) {\n        case 0xFF00: break;\n        case 0xFFE0: // APP0 (Application Specific)\n        case 0xFFE1: // APP1\n        case 0xFFE2: // APP2\n        case 0xFFE3: // APP3\n        case 0xFFE4: // APP4\n        case 0xFFE5: // APP5\n        case 0xFFE6: // APP6\n        case 0xFFE7: // APP7\n        case 0xFFE8: // APP8\n        case 0xFFE9: // APP9\n        case 0xFFEA: // APP10\n        case 0xFFEB: // APP11\n        case 0xFFEC: // APP12\n        case 0xFFED: // APP13\n        case 0xFFEE: // APP14\n        case 0xFFEF: // APP15\n        case 0xFFFE: { // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xFFE0) {\n            if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49\n              && appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n              this.jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(14, 14 + (3 * appData[12] * appData[13])),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xFFEE) {\n            if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F\n              && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n              this.adobe = {\n                version: appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n        }\n\n        case 0xFFDB: { // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16();\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Int32Array(64);\n            if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if ((quantizationTableSpec >> 4) === 1) { // 16 bit\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = readUint16();\n              }\n            } else {\n              throw new Error('DQT: invalid table spec');\n            }\n            this.quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n        }\n\n        case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xFFC2: { // SOF2 (Start of Frame, Progressive DCT)\n          readUint16(); // skip data length\n          const frame = {\n            extended: (fileMarker === 0xFFC1),\n            progressive: (fileMarker === 0xFFC2),\n            precision: data[offset++],\n            scanLines: readUint16(),\n            samplesPerLine: readUint16(),\n            components: {},\n            componentsOrder: [],\n          };\n\n          const componentsCount = data[offset++];\n          let componentId;\n          // let maxH = 0;\n          // let maxV = 0;\n          for (let i = 0; i < componentsCount; i++) {\n            componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            const qId = data[offset + 2];\n            frame.componentsOrder.push(componentId);\n            frame.components[componentId] = {\n              h,\n              v,\n              quantizationIdx: qId,\n            };\n            offset += 3;\n          }\n          prepareComponents(frame);\n          this.frames.push(frame);\n          break;\n        }\n\n        case 0xFFC4: { // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16();\n          for (let i = 2; i < huffmanLength;) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (let j = 0; j < 16; j++, offset++) {\n              codeLengths[j] = data[offset];\n              codeLengthSum += codeLengths[j];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (let j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            if ((huffmanTableSpec >> 4) === 0) {\n              this.huffmanTablesDC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            } else {\n              this.huffmanTablesAC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            }\n          }\n          break;\n        }\n\n        case 0xFFDD: // DRI (Define Restart Interval)\n          readUint16(); // skip data length\n          this.resetInterval = readUint16();\n          break;\n\n        case 0xFFDA: { // SOS (Start of Scan)\n          readUint16(); // skip length\n          const selectorsCount = data[offset++];\n          const components = [];\n          const frame = this.frames[0];\n          for (let i = 0; i < selectorsCount; i++) {\n            const component = frame.components[data[offset++]];\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = this.huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = this.huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++];\n          const spectralEnd = data[offset++];\n          const successiveApproximation = data[offset++];\n          const processed = decodeScan(data, offset,\n            frame, components, this.resetInterval,\n            spectralStart, spectralEnd,\n            successiveApproximation >> 4, successiveApproximation & 15);\n          offset += processed;\n          break;\n        }\n\n        case 0xFFFF: // Fill bytes\n          if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          if (data[offset - 3] === 0xFF\n            && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n            // could be incorrect encoding -- last 0xFF byte of the previous\n            // block was eaten by the encoder\n            offset -= 3;\n            break;\n          }\n          throw new Error(`unknown JPEG marker ${fileMarker.toString(16)}`);\n      }\n      fileMarker = readUint16();\n    }\n  }\n\n  getResult() {\n    const { frames } = this;\n    if (this.frames.length === 0) {\n      throw new Error('no frames were decoded');\n    } else if (this.frames.length > 1) {\n      console.warn('more than one frame is not supported');\n    }\n\n    // set each frame's components quantization table\n    for (let i = 0; i < this.frames.length; i++) {\n      const cp = this.frames[i].components;\n      for (const j of Object.keys(cp)) {\n        cp[j].quantizationTable = this.quantizationTables[cp[j].quantizationIdx];\n        delete cp[j].quantizationIdx;\n      }\n    }\n\n    const frame = frames[0];\n    const { components, componentsOrder } = frame;\n    const outComponents = [];\n    const width = frame.samplesPerLine;\n    const height = frame.scanLines;\n\n    for (let i = 0; i < componentsOrder.length; i++) {\n      const component = components[componentsOrder[i]];\n      outComponents.push({\n        lines: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n      });\n    }\n\n    const out = new Uint8Array(width * height * outComponents.length);\n    let oi = 0;\n    for (let y = 0; y < height; ++y) {\n      for (let x = 0; x < width; ++x) {\n        for (let i = 0; i < outComponents.length; ++i) {\n          const component = outComponents[i];\n          out[oi] = component.lines[0 | y * component.scaleY][0 | x * component.scaleX];\n          ++oi;\n        }\n      }\n    }\n    return out;\n  }\n}\n\nexport default class JpegDecoder extends BaseDecoder {\n  constructor(fileDirectory) {\n    super();\n    this.reader = new JpegStreamReader();\n    if (fileDirectory.JPEGTables) {\n      this.reader.parse(fileDirectory.JPEGTables);\n    }\n  }\n\n  decodeBlock(buffer) {\n    this.reader.resetFrames();\n    this.reader.parse(new Uint8Array(buffer));\n    return this.reader.getResult().buffer;\n  }\n}\n"]}